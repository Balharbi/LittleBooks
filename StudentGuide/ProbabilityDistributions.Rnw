

\label{sec:DiscreteDistributions}
\label{sec:probability}
\myindex{random variables}%

\R\ can calculate quantities related to probability distributions of all types.  
It is straightforward to generate
random samples from these distributions, which can be used 
for simulation and exploration.
<<probdist,fig.height=4,fig.width=6>>=
xpnorm(1.96, mean=0, sd=1)    # P(Z < 1.96)
@
\Rindex{qnorm()}%
\Rindex{dnorm()}%
\Rindex{pnorm()}%
\Rindex{xpnorm()}%
\Rindex{rnorm()}%
\Rindex{integrate()}%
<<>>=
# value which satisfies P(Z < z) = 0.975
qnorm(.975, mean=0, sd=1)   
integrate(dnorm, -Inf, 0)   # P(Z < 0)
@

A similar display is available for the F distribution.

<<>>=
xpf(3, df1=4, df2=20)
@

The following table displays the basenames for probability distributions 
available within base \R.  These functions can be prefixed by {\tt d} to 
find the density function for the distribution, {\tt p} to find the 
cumulative distribution function, {\tt q} to find quantiles, and {\tt r} to 
generate random draws. For example, to find the density function of an exponential
random variable, use the command \function{dexp()}.
The \function{qDIST()} function is the inverse of the 
\function{pDIST()} function, for a given basename {\tt DIST}. 
\begin{center}
\begin{tabular}{|c|c|c|} \hline
Distribution   & Basename                 \\ \hline
Beta           &  {\tt beta}        \\
binomial       &  {\tt binom}    \\
Cauchy         &  {\tt cauchy}   \\
chi-square     &  {\tt chisq}    \\
exponential    &  {\tt exp}      \\
F              &  {\tt f}        \\
gamma          &  {\tt gamma}    \\
geometric      &  {\tt geom}     \\
hypergeometric &  {\tt hyper}    \\
logistic       &  {\tt logis}    \\
lognormal      &  {\tt lnorm}    \\
negative binomial &  {\tt nbinom} \\
normal         &  {\tt norm}      \\
Poisson        &  {\tt pois}      \\
Student's t    &  {\tt t}        \\
Uniform        &  {\tt unif}     \\
Weibull        &  {\tt weibull}   \\ \hline
\end{tabular}
\end{center}
\DiggingDeeper{The \function{fitdistr()} within the \pkg{MASS} package facilitates estimation
of parameters for many distributions.}
The \function{plotDist()} can be used to display distributions in a variety of ways.
\Rindex{gf_dist()}%
<<tidy=FALSE>>=
gf_dist('norm', mean=100, sd=10, kind='cdf')
@
<<tidy=FALSE>>=
gf_dist('exp', kind='histogram', xlab="x")
@
Note that this sets the rate parameter to 1 by default and is equivalent to the following command.
<<eval=FALSE, tidy=FALSE>>=
gf_dist('exp', rate=1, kind='histogram', xlab="x")
@

<<tidy=FALSE,fig.keep='last'>>=
gf_dist('binom', size=25, prob=0.25, xlim=c(-1,26))
@

Multiple distributions can be plotted on the same plot.
\Rindex{groups option}%
\Rindex{type option}%
\Rindex{under option}%
\Rindex{lwd option}%
\Rindex{pch option}%
<<tidy=FALSE,fig.keep='last'>>=
gf_dist("binom", size=100, prob=.3, col="black", lwd=1.5, pch=16)
plotDist("norm", mean=30, sd=sqrt(100 * .3 * .7), 
  groups = abs(x - 30) > 6 , type="h", under=TRUE)
@

The \function{plotFun()} function can be used to plot an arbitrary 
function (in this case an exponential random variable).

\Rindex{makeFun()}%
\Rindex{rexp()}%
\Rindex{plotFun()}%
\Rindex{gf\_histogram()}%
\Rindex{binwidth option}%
\Rindex{center option}%
\Rindex{add option}%
% XX NH Replace with ggformula in future
<<fig.keep="last">>=
f <- makeFun(2*exp(-2*x) ~ x)   # exponential with rate parameter 2
x <- rexp(1000, rate=2)
gf_histogram(~ x, binwidth=0.2, center=0.1)
plotFun(f(x) ~ x, col="red", lwd=2, add=TRUE)
@
\begin{problem}
Generate a sample of 1000 exponential random variables with rate parameter
equal to 2, and calculate the mean of those variables.
\end{problem}
\begin{solution}
<<expprob>>=
x <- rexp(1000, rate=2)
mean(x)
@
\end{solution}

\begin{problem}
Find the median of the random variable X, if it is exponentially distributed
with rate parameter 10.
\end{problem}
\begin{solution}
<<expprob2>>=
qexp(.5, rate=10)
@
\end{solution}
